name: Publish to beta

on:
  workflow_dispatch:
  push:
    branches:
      - beta 

jobs:
  publish:
    runs-on: windows-latest

    strategy:
      matrix:
        runtime: [ win-x86, win-x64, win-arm64 ]
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: beta

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore
        run: dotnet restore .\uWidgets.sln

      - name: Build
        run: dotnet build .\uWidgets.sln --configuration Release --no-restore

      - name: Publish
        run: |
           dotnet publish .\uWidgets\uWidgets.csproj `
           --configuration Release `
           --runtime ${{ matrix.runtime }} `
           --output .\uWidgets\bin\Publish\${{ matrix.runtime }} `
           --self-contained false `
           --no-restore

      - name: Copy Widgets
        run: |
           New-Item -Path .\uWidgets\bin\Publish\${{ matrix.runtime }}\Widgets -ItemType Directory -Force
           Copy-Item -Path .\uWidgets\bin\Release\net8.0\Widgets\* -Destination .\uWidgets\bin\Publish\${{ matrix.runtime }}\Widgets -Recurse -Force
      
      - name: Clean up
        run: |
          Remove-Item -Path .\uWidgets\bin\Publish\${{ matrix.runtime }}\*.pdb -Force
          Remove-Item -Path .\uWidgets\bin\Publish\${{ matrix.runtime }}\*.deps.json -Force

      - name: Archive
        run: |
          Compress-Archive -Path .\uWidgets\bin\Publish\${{ matrix.runtime }} -DestinationPath .\uWidgets\bin\Publish\${{ matrix.runtime }}.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: publish
          path: .\uWidgets\bin\Publish

  release:
    runs-on: windows-latest
    needs: publish
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: beta
    
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: publish
          path: .\uWidgets\bin\Publish

      - name: Get Assembly Version
        id: version
        run: |
          $filePath = ".\uWidgets\AssemblyInfo.cs"
          $content = Get-Content $filePath

          if ($content -match '\[assembly: AssemblyVersion\("([0-9]+\.[0-9]+\.[0-9]+)"\)\]') {
            $version = $matches[1]
            Write-Output "Assembly Version: $version"
            echo "::set-output name=version::$version"
          } else {
            Write-Error "AssemblyVersion not found in $filePath"
            exit 1
          }
        shell: pwsh
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: uWidgets ${{ steps.version.outputs.version }} BETA
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload win-x86
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\uWidgets\bin\Publish\win-x86.zip
          asset_name: win-x86.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload win-x64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\uWidgets\bin\Publish\win-x64.zip
          asset_name: win-x64.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload win-arm64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\uWidgets\bin\Publish\win-arm64.zip
          asset_name: win-arm64.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
