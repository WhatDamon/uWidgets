name: Publish to beta

on:
  workflow_dispatch:
  push:
    branches:
      - beta

jobs:
  publish:
    runs-on: windows-latest

    strategy:
      matrix:
        runtime: [ win-x86, win-x64, win-arm64 ]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Publish App
        run: |
          dotnet publish .\src\uWidgets\uWidgets.csproj `
          --configuration Release `
          --runtime ${{ matrix.runtime }} `
          --output .\src\uWidgets\bin\Publish\${{ matrix.runtime }} `
          --self-contained false `
          /p:PublishReadyToRun=true

      - name: Publish Widgets
        run: |
          $widgetsPath = ".\src\Widgets"
          $outputPath = ".\src\uWidgets\bin\Publish\${{ matrix.runtime }}\Widgets"
          if (-not (Test-Path -Path $outputPath)) {
            New-Item -Path $outputPath -ItemType Directory -Force
          }
          $widgetCsproj = Get-ChildItem -Path $widgetsPath -Recurse -Filter *.csproj
          
          foreach ($csproj in $widgetCsproj) {
            $widgetName = Split-Path $csproj.DirectoryName -Leaf

            dotnet publish $csproj.FullName `
              --configuration Release `
              --runtime ${{ matrix.runtime }} `
              --output $outputPath `
              --self-contained false `
              /p:PublishReadyToRun=true
          }
          
          Get-ChildItem -Path $outputPath -Filter *.pdb -Recurse | Remove-Item -Force
          Get-ChildItem -Path $outputPath -Filter *.deps.json -Recurse | Remove-Item -Force

      - name: Archive
        run: |
          Compress-Archive `
            -Path .\src\uWidgets\bin\Publish\${{ matrix.runtime }} `
            -DestinationPath .\src\uWidgets\bin\Publish\${{ matrix.runtime }}.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: publish-${{ matrix.runtime }}
          path: .\src\uWidgets\bin\Publish\${{ matrix.runtime }}.zip

  release:
    runs-on: windows-latest
    needs: publish
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: publish-*
          merge-multiple: true
          path: .\src\uWidgets\bin\Publish

      - name: Get Assembly Version
        id: version
        run: |
          $filePath = ".\src\uWidgets\AssemblyInfo.cs"
          $content = [string](Get-Content $filePath)

          if ($content -match '\[assembly: AssemblyVersion\("([0-9]+\.[0-9]+\.[0-9]+)"\)\]') {
            $version = $matches[1]
            echo "Assembly Version: $version"
            echo "version=v$version" >> $env:GITHUB_OUTPUT
          } else {
            echo "AssemblyVersion not found in $filePath"
            exit 1
          }

      - name: Create Tag
        uses: negz/create-tag@v1
        with:
          version: ${{ steps.version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Changelog
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.version.outputs.version }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: ${{ steps.version.outputs.version }}-beta
          body: |
            # Changelog:
            ${{ steps.changelog.outputs.changes }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload win-x86
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\src\uWidgets\bin\Publish\win-x86.zip
          asset_name: win-x86.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload win-x64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\src\uWidgets\bin\Publish\win-x64.zip
          asset_name: win-x64.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload win-arm64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\src\uWidgets\bin\Publish\win-arm64.zip
          asset_name: win-arm64.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-docs:
    runs-on: windows-latest
    needs: publish
    
    steps:  
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
  
      - name: Install tool
        run: dotnet tool install -g XMLDoc2Markdown

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: build
          path: .
  
      - name: Run tool
        run: |
          ls .
          ls .\build
          xmldoc2md .\build\uWidgets.Core.dll `
          --output .\new-wiki\API `
          --github-pages `
          --index-page-name API `
  
      - name: Checkout wiki repository
        uses: actions/checkout@v4
        with:
          repository: ${{github.repository}}.wiki
          path: wiki
  
      - name: Update API docs
        run: |
          if (Test-Path -Path wiki\API) { Remove-Item -Recurse -Force wiki\API }
          New-Item -ItemType Directory -Path wiki\API
          Copy-Item -Path new-wiki\API\* -Destination wiki\API -Recurse
  
      - name: Commit & Push changes
        run: |
          cd wiki
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update API docs"
          git push
